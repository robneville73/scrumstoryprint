<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	<ModulePrefs title="Sample Spreadsheet Gadget"
	             description="Fun sample spreadsheet Gadget."
	             author="Google Engineering"
	             author_affiliation="Google Inc."
	             author_email="visualization.api+spreadsheet@gmail.com"
	             screenshot="/ig/modules/spreadsheet.png"
	             thumbnail="/ig/modules/spreadsheet-thm.png" > 
	<Require feature="idi"/>
	<Require feature="locked-domain" />
	</ModulePrefs>
	<UserPref name="_table_query_url" display_name="Data source url" 
	          required="true"/>
	<UserPref name="_table_query_refresh_interval" 
	          display_name="Data refresh interval (minutes)" 
	          default_value="0" datatype="enum" required="false">
	<EnumValue value="0" display_value="Do not refresh"/>
	<EnumValue value="60" display_value="1"/>
	<EnumValue value="300" display_value="5"/>
	<EnumValue value="1800" display_value="30"/>
	</UserPref>
	<Content type="html">
		<![CDATA[
			
			<script src="http://www.google.com/jsapi" type="text/javascript"></script>
			<div id="tablediv" style="overflow: auto;"><img src="http://www.google.com/ig/images/spinner.gif" /></div>
			
			<script>
				var gadgetHelper = null;
				_IG_RegisterOnloadHandler(loadVisualizationAPI);
				
				function loadVisualizationAPI() {
					google.load("visualization","1");
					google.setOnLoadCallback(sendQuery);
				}
				
				function sendQuery() {
					var prefs = new _IG_Prefs(); //User prefs
					gadgetHelper = new google.visualization.GadgetHelper();
					var query = gadgetHelper.createQueryFromPrefs(prefs);
					query.send(handleQueryResponse);
				}
				
				function handleQueryResponse(response) {
					if(!gadgetHelper.validateResponse(response)) {
						return; //default error handling was done, so just exit
					}
					
					var data = response.getDataTable();
					var html = [];
					html.push('Looking for the secret word\n');
					
					for (var row=0; row < data.getNumberOfRows(); row++) {
						for (var col=0; col < data.getNumberOfColumns(); col++) {
							var formattedValue = data.getFormattedValue(row,col);
							formattedValue = escapeHtml(formattedValue);
							
							if(formattedValue == 'world') {
								html.push('<span style="color:red; font-size:24pt; font-weight:bold;">');
								html.push(formattedValue);
								html.push('</span>');
							} else {
								html.push(formattedValue);
							}
						html.push('\n');
						}
					}
					
					var tableDiv = _gel('tablediv');
					tableDiv.innerHTML = html.join('');
					tableDiv.style.width = document.body.clientWidth + 'px';
					tableDiv.style.height = document.body.clientHeight + 'px';
				}
			
				function escapeHtml(text) {
					if(text == null) {
						return '';
					}
					return _hesc(text);
				}
			</script>
			
		]]>
	</Content>
</Module>